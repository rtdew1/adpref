library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/ar_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
gp_mu = read.csv("analysis-5.0-og-ar-dresses10-None/individuals.csv")
library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/ar_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
gp_mu = read.csv("analysis-5.0-og-ar-dresses10-None/individuals.csv")
table(gp_mu$accuracy)
knn = read.csv("analysis-4.1-knn-ar-dresses10-test-1.2/individuals.csv")
library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/ar_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
gp_mu = read.csv("analysis-5.0-og-ar-dresses10-None/individuals.csv")
library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/ar_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
gp_mu = read.csv("analysis-5.0-og-ar-dresses10-None/individuals.csv")
table(gp_mu$accuracy)
knn = read.csv("analysis-4.1-knn-ar-dresses10-test/individuals.csv")
library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/ar_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
gp_mu = read.csv("analysis-5.0-og-ar-dresses10-None/individuals.csv")
table(gp_mu$accuracy)
knn = read.csv("analysis-4.1-knn-ar-dresses10-test-None/individuals.csv")
table(knn$accuracy)
gp_mu_agg = read.csv("analysis-5.1.2-aggregated-ar-dresses10-None/individuals.csv")
table(gp_mu_agg$accuracy)
vgg10 = read.csv("analysis-5.2-og-ar-vgg_pca10_dresses-None/individuals.csv")
vgg20 = read.csv("analysis-5.3-og-ar-vgg_pca20_dresses-None/individuals.csv")
library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/ar_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
gp_mu = read.csv("analysis-5.0-og-ar-dresses10-None/individuals.csv")
table(gp_mu$ratings_accuracy)
knn = read.csv("analysis-4.1-knn-ar-dresses10-test-None/individuals.csv")
table(knn$ratings_accuracy)
gp_mu_agg = read.csv("analysis-5.1.2-aggregated-ar-dresses10-None/individuals.csv")
table(gp_mu_agg$ratings_accuracy)
vgg10 = read.csv("analysis-5.2-og-ar-vgg_pca10_dresses-None/individuals.csv")
vgg20 = read.csv("analysis-5.3-og-ar-vgg_pca20_dresses-None/individuals.csv")
# Compare individual-level accuracies by acquisition method
acc_plot_df = rbind(
data.frame(
Model = "GP-MU (Ind)",
Mean = table(gp_mu$ratings_accuracy)/nrow(gp_mu)
),
data.frame(
Model = "KNN",
Mean = table(knn$ratings_accuracy)/nrow(knn)
),
data.frame(
Model = "GP-MU (Agg)",
Mean = table(gp_mu_agg$ratings_accuracy)/nrow(gp_mu_agg)
)
)
colnames(acc_plot_df) = c("Model", "Accuracy", "Proportion")
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
#scale_fill_brewer(palette = "Blues", direction = -1) +
theme_bw()
setwd(plots_dir)
pdf(file = "acc_by_model.pdf", width = 5, height = 3)
print(acc_by_model)
dev.off()
avg_acc = rbind(
data.frame(
Model = "GP-MU",
Mean = mean(gp_mu$ratings_accuracy),
SE = t.test(gp_mu$ratings_accuracy)$stderr
),
data.frame(
Model = "KNN",
Mean = mean(knn$ratings_accuracy),
SE = t.test(knn$ratings_accuracy)$stderr
),
data.frame(
Model = "GP-MU (Agg)",
Mean = mean(gp_mu_agg$ratings_accuracy),
SE = t.test(gp_mu_agg$ratings_accuracy)$stderr
),
data.frame(
Model = "TL-10",
Mean = mean(vgg10$ratings_accuracy),
SE = t.test(vgg10$ratings_accuracy)$stderr
),
data.frame(
Model = "TL-20",
Mean = mean(vgg20$ratings_accuracy),
SE = t.test(vgg20$ratings_accuracy)$stderr
)
)
ggplot(avg_acc) +
geom_col(aes(x = Model, y = Mean),
fill = "lightsteelblue2") +
geom_errorbar(aes(x = Model, ymax = Mean + 2*SE, ymin = Mean - 2*SE),
color = "steelblue",
width = 0.25) +
ylab("Average Accuracy") +
theme_bw()
gp_mu$study_name = "GP-MU"
knn$study_name = "KNN"
gp_mu_agg$study_name = "GP-MU (Agg)"
combined_studies = rbind(gp_mu,
knn,
gp_mu_agg)
summary(aov(accuracy ~ study_name, data = combined_studies))
results_dir = "~/Dropbox/1_proj/urbn/results/binary_mpc_results/"
setwd(results_dir)
mu = read.csv("analysis-7.0-knn1-binary-mpc-None/")
library(ggplot2)
library(tidyverse)
library(xtable)
results_dir = "~/Dropbox/1_proj/urbn/results/binary_mpc_results/"
plots_dir = "~/Dropbox/1_proj/urbn/plots/"
setwd(results_dir)
mu = read.csv("analysis-7.0-knn1-binary-mpc-None/")
mu = read.csv("analysis-7.0-knn1-binary-mpc-None/individuals.csv")
table(mu$ratings_accuracy)
table(mu$fixed_mpc_accuracy)
listdir()
list.files()
for (i in 1:5) { print(i)}
s = "analysis-7.0-knn1-binary-mpc-None"
paste(s, "/individuals.csv")
paste(s, "/individuals.csv", sep = "")
indiv_results = list()
for (s in studies) {
indiv_results[names[s]] = read.csv(paste(s, "/individuals.csv", sep = ""))
}
studies = c(
"analysis-7.0-knn1-binary-mpc-None",
"analysis-7.1.2-abernethy-binary-mpc-None",
"analysis-7.3-aggregated-fixed-binary-mpc-None",
"analysis-7.4-og-binary-mpc-None",
"analysis-7.8-gur_approx_sym-binary-mpc-update1-new_cand-None"
)
names = c(
"KNN",
"Adaptive Linear",
"MU-Agg",
"MU",
"GUR"
)
indiv_results = list()
for (s in studies) {
indiv_results[names[s]] = read.csv(paste(s, "/individuals.csv", sep = ""))
}
names[s]
?enumerate
indiv_results = list()
for (s in seq_along(studies)) {
indiv_results[study_names[s]] = read.csv(paste(studies[s], "/individuals.csv", sep = ""))
}
studies = c(
"analysis-7.0-knn1-binary-mpc-None",
"analysis-7.1.2-abernethy-binary-mpc-None",
"analysis-7.3-aggregated-fixed-binary-mpc-None",
"analysis-7.4-og-binary-mpc-None",
"analysis-7.8-gur_approx_sym-binary-mpc-update1-new_cand-None"
)
study_names = c(
"KNN",
"Adaptive Linear",
"MU-Agg",
"MU",
"GUR"
)
indiv_results = list()
for (s in seq_along(studies)) {
indiv_results[study_names[s]] = read.csv(paste(studies[s], "/individuals.csv", sep = ""))
}
indiv_results = list()
for (s in seq_along(studies)) {
print(study_names[s])
s_res = read.csv(paste(studies[s], "/individuals.csv", sep = "")
indiv_results[study_names[s]] = res)
indiv_results = list()
for (s in seq_along(studies)) {
print(study_names[s])
s_res = read.csv(paste(studies[s], "/individuals.csv", sep = ""))
indiv_results[study_names[s]] = res
}
indiv_results = list()
for (s in seq_along(studies)) {
print(study_names[s])
res_s = read.csv(paste(studies[s], "/individuals.csv", sep = ""))
indiv_results[study_names[s]] = res_s
}
indiv_results = list()
for (s in seq_along(studies)) {
name_s = study_names[s]
res_s = read.csv(paste(studies[s], "/individuals.csv", sep = ""))
indiv_results[[name_s]] = res_s
}
indiv_results[["Adaptive Linear"]]
indiv_results[["MU-Agg"]]
seq_along(indiv_results)
res = indiv_results[[1]]
for(r in indiv_results) { print(name(s))}
for(r in indiv_results) { print(names(r))}
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[s]
acc = table(res$fixed_mpc_accuracy)/nrow(res)
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
ls()
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[s]
acc = table(res$fixed_mpc_accuracy)/nrow(res)
if (!"acc_plot_df" %in% ls()){
acc_plot_df = data.frame(Model = name, Mean = acc)
} else {
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
}
acc
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[[s]]
acc = table(res$fixed_mpc_accuracy)/nrow(res)
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
acc_plot_df
colnames(acc_plot_df) = c("Model", "Accuracy", "Proportion")
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
#scale_fill_brewer(palette = "Blues", direction = -1) +
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_continuous(breaks = seq(0.1, 1, by = 0.1))
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df, aes(x = as.numeric(Accuracy), y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_continuous(breaks = seq(0.1, 1, by = 0.1))
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(breaks = seq(0.1, 1, by = 0.1))
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(breaks = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
# Create a data frame
acc_plot_df <- data.frame(
Accuracy = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1),
Proportion = c(0.25, 0.5, 0.75, 1, 0.75, 0.5, 0.25, 0, 0.25, 0.5),
Model = c("Model A", "Model B", "Model C")
)
# Create a data frame
acc_plot_df <- data.frame(
Accuracy = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1),
Proportion = c(0.25, 0.5, 0.75, 1, 0.75, 0.5, 0.25, 0, 0.25, 0.5),
Model = c("Model A", "Model B")
)
# Create the plot
acc_by_model <- ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
theme_bw() +
scale_x_continuous(breaks = seq(0.1, 1, by = 0.1))
# Print the plot
acc_by_model
acc_by_model = ggplot(acc_plot_df,
aes(
x = as.numeric(Accuracy),
y = as.numeric(Proportion),
fill = Model
)
) +
geom_col(position = "dodge") +
scale_x_discrete(breaks = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[[s]]
acc = table(res$fixed_mpc_accuracy)/nrow(res)
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
colnames(acc_plot_df) = c("Model", "Accuracy", "Proportion")
acc_by_model = ggplot(acc_plot_df,
aes(
x = as.numeric(Accuracy),
y = as.numeric(Proportion),
fill = Model
)
) +
geom_col(position = "dodge") +
scale_x_discrete(breaks = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df,
aes(
x = as.numeric(Accuracy),
y = as.numeric(Proportion),
fill = Model
)
) +
geom_col(position = "dodge") +
scale_x_continuous(breaks = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df, aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg")], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
table(res$fixed_mpc_accuracy)
table(factor(res$fixed_mpc_accuracy, levels=seq(0.1,1,0.1))
table(res$fixed_mpc_accuracy,
table(factor(res$fixed_mpc_accuracy, levels=seq(0.1,1,0.1))
)
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[[s]]
acc = table(factor(res$fixed_mpc_accuracy, levels=seq(0,1,0.1))/nrow(res)
acc_plot_df = rbind(
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[[s]]
acc = table(factor(res$fixed_mpc_accuracy, levels=seq(0,1,0.1)))/nrow(res)
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
colnames(acc_plot_df) = c("Model", "Accuracy", "Proportion")
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[[s]]
acc = table(factor(res$fixed_mpc_accuracy, levels=seq(0,1,0.1)))/nrow(res)
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
colnames(acc_plot_df) = c("Model", "Accuracy", "Proportion")
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0.1, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_plot_df = data.frame()
for (s in seq_along(indiv_results)) {
name = names(indiv_results)[s]
res = indiv_results[[s]]
acc = table(factor(res$fixed_mpc_accuracy, levels=seq(0,1,0.1)))/nrow(res)
acc_plot_df = rbind(
acc_plot_df,
data.frame(Model = name, Mean = acc)
)
}
colnames(acc_plot_df) = c("Model", "Accuracy", "Proportion")
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0, 1, by = 0.1)) +
theme_bw()
acc_by_model
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge", .drop=FALSE) +
scale_x_discrete(labels = seq(0, 1, by = 0.1)) +
theme_bw()
acc_by_model
?geom_col
acc_by_model = ggplot(acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),], aes(x = Accuracy, y = Proportion, fill = Model)) +
geom_col(position = "dodge") +
scale_x_discrete(labels = seq(0, 1, by = 0.1), drop=FALSE) +
theme_bw()
acc_by_model
acc_by_model_dens = ggplot(
acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),],
aes(x = as.numeric(Accuracy), y = as.numeric(Proportion), fill = Model)
) +
geom_density() +
scale_x_continuous(labels = seq(0, 1, by = 0.1), drop=FALSE) +
theme_bw()
acc_by_model_dens = ggplot(
acc_plot_df[acc_plot_df$Model %in% c("KNN", "Adaptive Linear", "MU-Agg"),],
aes(x = as.numeric(Accuracy), y = as.numeric(Proportion), fill = Model)
) +
geom_density() +
scale_x_continuous(labels = seq(0, 1, by = 0.1)) +
theme_bw()
acc_by_model_dens
